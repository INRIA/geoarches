# GitLab CI/CD pipeline to continuously build, test, deploy, and monitor iterative code changes.
#
# This file specifies the stages, jobs, and scripts to be executed during your CI/CD pipeline. 
# It is a YAML file with its own custom syntax.

# The order of the items in stages defines the execution order for jobs.
# If any job fails, the pipeline is marked as failed and jobs in later stages do not start.
stages:
  - test

# Job to run unit tests.
pytest:
  stage: test
  # Specify runner to run job (Seems like INRIA shared runners are not allowed to run untagged jobs).
  tags:
        - ci.inria.fr
        - small
  # Run in docker container with python and essential tools like pip and setuptools.
  image: python:3.10-slim
  script:
    - pip install .  # Install package and dependencies.
    - pip install --no-dependencies tensordict
    - pwd  # Print the current working directory.
    - python -c "import sys; print('\n'.join(sys.path))"  # Print Python path.
    - pytest --disable-warnings --junitxml=pytest-report.xml tests/  # Run all tests under tests/ dir and save report.
  # Gitlab will upload these files and attach to the job.
  artifacts:
    when: always  # Whether job succeeds or fails.
    reports:
      junit: pytest-report.xml  # Specify that pytest-report.xml is a JUnit-style test report